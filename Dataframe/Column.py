# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Dataframe

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Column(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Column()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsColumn(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Column
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Column
    def Colmetadata(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Dataframe.ColMetaData import ColMetaData
            obj = ColMetaData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def DataType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # Column
    def Data(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def ColumnStart(builder):
    builder.StartObject(3)

def Start(builder):
    ColumnStart(builder)

def ColumnAddColmetadata(builder, colmetadata):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(colmetadata), 0)

def AddColmetadata(builder, colmetadata):
    ColumnAddColmetadata(builder, colmetadata)

def ColumnAddDataType(builder, dataType):
    builder.PrependUint8Slot(1, dataType, 0)

def AddDataType(builder, dataType):
    ColumnAddDataType(builder, dataType)

def ColumnAddData(builder, data):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(data), 0)

def AddData(builder, data):
    ColumnAddData(builder, data)

def ColumnEnd(builder):
    return builder.EndObject()

def End(builder):
    return ColumnEnd(builder)
